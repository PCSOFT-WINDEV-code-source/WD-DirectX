#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : FEN_03a_Matrices
 major_version : 28
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : FEN_03a_Matrices
 identifier : 0x29ec759b06e9a764
 internal_properties : CAAAAAgAAADl4Q9sYw0Ktxdnibp0f9T6uAiMh/WV5BnFAyEy1AKy+cRO51ggGFrs7lzuoFJRnM0FVwmet4j3kNjWJ61Yexw7BCJBdt5LsmmKCUEgHZHboxseLzR8KGGtHT1/9NKL8m8O3q+BozU+pUQaIBeGDKm5cLybIs9DJG8lw+1613Z6k8SkokHWIwhTKxe5heBXgBWeoMoJQ86VBILau/oMoqO0Q8F/vo63nKbEA0lRjbGBiQ0+Nau9eWID3p/g6dMTMWzoaKChAH2L2vbIo+WNd7jdwEjkBMkDTkSagGBG4UU3silUlss1zJb7RbyHIA4DTmb7nPrTg3/UntOBQhS99u1kfBc4FWRpMvK+PX7o0b2d9hB4oqpx5IDKXNQhhqrLuZmYwVUKXMkPkFeuzUY+Kal7cHEUm4uu2txjFc1096HSbyt5cl0Kskh5+iiDzPcXjkUpVRVMNfb1OHCxVNpeNB7UMDnRiskXWnsubr0m6uGGKJVeY2lX/g4XS2UgUliWp1nZOJlybh89WmK11lHtTx/QeQAFxwrY5Getdy2RVg+Oeow2Dr/mGTo+y51LpkncO3Q7hj8eSbvhM6jiQRox+sghY0ejG6u2uQSoMluu87368yYIG/gfFk9nrOl29Qn4HO0dPUBZas0ZTN+admdmNyQrPVWyMwyPSzSivSSnJ0/iYsxvChIFZWNPhI7g83Q8F6JJ0XafiGEDIXxUrYB35lgzDmAWb3rbbpYxD4dfV2FXaYMvPCvlX6V4sgBdCo+rYiq3CRlUza+CibyrpCLUK+mygQ/WS+9IP5YU+WhZDwYyG8vdig/Ol0xh5zGhkxVUxh5SvxfcWVQzwZwV8Nk+KmahekGcHcTgb34MdKvf2i1wRQFGHxRjSaI6JjB21WzJN/NoSWb7wfsM3mNsTeZi2de+ZLY1UagXDRMOWFkpMFiSaWiojGK8Jh47VTpcEweM4SfWF7q/V+DT2wQAR0wDO/OWE/yTstVfPWN1317ZLLbNEmxi8uBOpxkKNTTZbGKIIOy3SsObXU6Rn0U=
 properties :
  width : 796
  height : 606
  widthClient : 794
  heightClient : 574
 controls :
  -
    name : BTN_Echap
    identifier : 0x2c76672f6656e36d
    internal_properties : CAAAAAgAAABLAl409W7qL75D6/V5FcKLfitlcJH2gop21uGdOQ2KmeP7t7rKyfvU5ZfXbvfQdkZcRzHpVogHrMktjsI+qKS5JhflbkhRnABPZIT2DTD1O8Q07KecOl3hiPyZMWBpfRVPWlgoX/QRvFr2uc7rUe2YuksoxIgr4rtPUFXbm6A4Lg75ut0FYUZVp78kfoB6JcGfqv1tgtt9jJepnduf8vChNiizNfiIMYoy3/RiHfuxEk2NT5Mc2q+GaQkGVJscPJAQx3CrRi+na/C0q0yOWFfDExssHGxklUJRgEbDfJ1DSNALsLnvma7V4SuhDq+9YDFVGYgo2voVL6iUVwfuCjmYxiWZX0RJDBkmGn6HmXG1zT4qJhAC2uvUrIWQbtwn5zK0rIdWTnQJ0t0yIh58OXRb0iasyUoJ9q1kG78c9DXxP7y2mqauLu2Kwq22EhF5cYap1mgibdMlfkk+ge9yH+1KLB3OV4fkbsPwr+b0zuMT1C1Q17e8RcLinDu3uDsy177+udLW+0BNF5bfaW9aYqjulabm3KnYRpwAgwmVgVl4//RfEtOf2L/OMVXG8Yvs/AkUTsmsFJ3EQNqBeSoYN0dOfczfNpaqYUnZNQUNWmumd6fZ9Dacwx/pQh4Cu74SIno9E6KaE+UABJsGViR1aGwZDtdJF3tWFf0lzKVLFUoLPUroJ+WSU4eRyUSam9b9
    properties :
     x : 6
     y : -55
     width : 80
     height : 24
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        internal_properties : CAAAAAgAAADQZyvpRjJZltgKBVFD+SKMukTEU1n2G2jmPSjnx1ZKdSF2vB36egNKcReVrz/xwpIZdIpZoyUu0CjPxu+MpGLAedmE/39iAmJIcu72BpKoWkpseLXy2lnJGPSMFw==
        type : 18
      -
        type : 161
        enabled : false
  -
    name : IMG_DX
    identifier : 0x29ec759b06eba764
    internal_properties : CAAAAAgAAADFXKFzC2HK15KKVwGJhHOroMNyea+ooOGXvMcZ3JzMZpZZ0sJJJlTL8JgmeKZbUaF2HASAAZpbNxYwkMhzvdDzSF1xS//LrKhVH3dUcU9iuvs7XAiRLO49i8imjlVHBmn/9eWJyYNp6/3ZAgl1ZJYPUZT7qv+HTErhaiGyq91uIlsfSbVqWMs8f1q00V0cs77j8V0mK9/iFS+aDw1MXZQsHLy452yHaS7ufiFGgBmUEoB9GttpF0l0J6sxrGyrrEOV2MeKBe69kDtFT1NZQwvv9E2lt3HIakKZEpo2cXJXP/8nDy+OlScHgWlMG1FuRfbOGXBgfDDzx0Wkjol3eMBLnwiBXyXWhaMLMQ++Ydcj/AcUBokFyi83cIQ9B4LEApsgkKIg/ImJwerEPAV6QCCqJCMB+z3KxQU+lhZgMcfKjbTGtnsKFuD0cOYvFx6RVC5I4+GmZe/JwAuEBhmzWlNtcFIYISwvaKwYyk4P/gVGqbpNCcepgPCMVzWyTcCdOO1PkNhGyu8Xg+qro2dx8y/MpbUbeCVXzoPgqm9mEog50atYm6r9EcM2HDTyRbnslSRJG0fmsSpaGHvN0XfsiTXrZWULs84aFObEwFaK/QzuLbK3AHbjS3sa1k4bKwAnlHOI6iY=
    properties :
     width : 794
     height : 574
    type : 8
    code_elements :
     internal_properties : CAAAAAgAAABcBIGsYs8CtcfKi0qCrtR3CJgrrJQ4t12FiZ1zoVOZzjSRseUVBISV6hakK1+3SoSl92uIg2sgeF6pEzW3vZokIswvDw17FBezh59twsadrWoXRJc7zR9pjH/dWVdrQPsr3gvZUJKllnau
     type_code : 8
     p_codes : []
 menu :
  name : _Menu
  identifier : 0x29ec759b06eca764
  internal_properties : CAAAAAgAAAD7S+2GOLjEeheq9Y6YZGIRPpLnwB8KUS2je4S4X5oxSGrv51WBBaVxxbk/BTEdUwW0fnnvlhQNIBAuQTAO0S9+S8FMTvDhqkS1JydqFJBfHlbZSFzBkZAjjJ5aIH/cuMnF4Pme57TAyYvjnlkzTJmN5UX9hu+BEl3AsIsso5gsz3oX/KHp1ai/xWZCb54MlUFXdWmT2EOpULKqea/LH9EOlTkaiWsV2aM2/FfXQjTSY3NhAR6zEzKHYKVJwiZULchG0D4LNvRbPifZJPDMmlF6ptz+Rg0QN6SXG5jU7HifIzmkonwDFnOJQw==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : CAAAAAgAAABHSPkb1tqgSCqRR5dekoL1A/XsC+f7MghpgAiNjk2p+zU290UKFNsf/RG2TXCdD8pkYIQPTC757XGg+l+qdKnSy80OOFd+coZmWvKACTZS1VsEXFXvfAVoTQ4G
 actionbar : {}
 code_elements :
  type_code : 1
  p_codes :
   -
     internal_properties : CAAAAAgAAADPQmJV1Ybzu2CimDf7t2MDDiG23XjL86bwt9CvwjWLV84mHcbt9I+virGHmIvVHzueGKpPVPD0yeUsYPgLNiy9M/MlilIvSa4KMOh0ya6IzpckDAQOge/S26lQ7k2QqYfWyD547I11eucIIve4RAy2+mBv2NJo3O5ODqFyk3HcgQ/xEDGHxLFiej/PfUl+RIgcSc2v5R364ZlUHrXT
     code : |1-
      
      //
      // Les deux premiers exemple nous ont permit d'initialiser Direct3D et de dessiner des vertices en 2D
      // On aborde ici le concept de "matrices", un objet Direct3D utilisé pour effectuer différentes transformations sur les objets d'une scène 3D.
      //
      
      // Objets
      gpclD3D				est un IDirect3D9 dynamique					// Objet de base permettant de créer un "device"
      gpclD3DDevice 		est un IDirect3DDevice9 dynamique			// Objet de manipulation du "device"
      gpclVertexBuffer	est un IDirect3DVertexBuffer9 dynamique		// Objet permettant de stocker des vertices
      
      // Structure personnalisée pour stocker un type de vertex 
      VERTEXPERSO est une structure
      	x, y, z      sont des reels sur 4			// Position du vertex
      	color 		 est un entier sans signe		// Couleur du vertex
      FIN
      
      // Décrit le type de notre vertex personnalisé
      constant
      	D3DFVF_VERTEXPERSO = D3DFVF_XYZ + D3DFVF_DIFFUSE
      FIN
   -
     internal_properties : CAAAAAgAAAA7Evr0L+Ei/amyQ912fk4LCkziAFUSRImNjpwemp3DARRh0SEA7y3zUl0y//FYDaynW61LCBlGuxj1VYITS1OsrxNzN/aNS30LNGwtJ8Fw5wWq3y3n7fN2/zDpNx0JgAozX8AK9F3dHIyGw9h1iNqmfbwwIPq3RDzdorZvS320tw==
     code : |1-
      
      // Initialise Direct3D
      si D3DInit() ALORS
      	
      	// Initialise le "vertex buffer"
      	si D3DInitVertexBuffer() ALORS
      		
      		// Démarre le rendu
      		d3daffiche()
      	sinon
      		SI EnModeTestAutomatique ALORS
      			TestEcritRésultat(terInfo, "DirectX n'est pas disponible sur cette machine" + rc + erreurinfo)
      			Ferme
      			RETOUR
      		FIN
      		
      		erreur("Impossible d'initialiser le vertex buffer")
      	FIN	
      sinon
      	SI EnModeTestAutomatique ALORS
      		TestEcritRésultat(terInfo, "DirectX n'est pas disponible sur cette machine")
      		Ferme
      		RETOUR
      	FIN
      	
      	Erreur("Impossible d'initialiser Direct3D")
      FIN
     type : 34
   -
     type : 180
     enabled : false
   -
     type : 230
     enabled : false
   -
     type : 11
   -
     type : 12
   -
     type : 17
   -
     type : 13
  procedures :
   -
     name : D3DInit
     internal_properties : CAAAAAgAAAD2jfD9FzpelcSW5UoeJAo2p/uKRVyiwuK6GY4hhywF7YfV8RtHlnZeBe0qgWt6TrmmIkTy2ydo2xKzUrBKQtHgYT2zIjUHcbbxiTlhUwZtppPUAw0O9wxiSC0vDIUeNv6N5RU7sNWh6Zowu8f3Ejvxm2qHTsBxNAhWPu2qWLW5P9Cq/26PaV1eobQnKvXQCrc6QmhyBYc9MsbHvlwyFktWR1SnZnrwTbrDei/TWlQ4O+hiuZSq/frc34Pyugl7gQ==
     procedure_id : 1867997254065694564
     type_code : 14
     code : |1-
      // Résumé : Initialise Direct3D
      Procédure D3DInit()
      
      	stD3DPP est un D3DPRESENT_PARAMETERS
      
      	// Création de l'objet Direct3D
      	gpclD3D = Direct3DCreate9(D3D_SDK_VERSION)
      	
      	// Vérifie si l'objet Direct3D a pu être créé
      	si gpclD3D = Null ALORS
      		renvoyer faux	
      	FIN
      	
      	// Paramétrage de la structure utilisée pour créer un "device" Direct3D
      	stD3DPP:Windowed = vrai														// Mode fenêtré
      	stD3DPP:SwapEffect = D3DSWAPEFFECT_DISCARD									
      	stD3DPP:BackBufferFormat = D3DFMT_UNKNOWN
      	
      	// Création du "device" Direct3D
      	// On utilise ici l'écran par défaut (D3DADAPTER_DEFAULT) et un "device" matériel (D3DDEVTYPE_HAL)
      	si failed(gpclD3D:CreateDevice(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, handle(img_dx), D3DCREATE_HARDWARE_VERTEXPROCESSING, stD3DPP, gpclD3DDevice)) _ou_ gpclD3DDevice = null ALORS
      		renvoyer faux
      	FIN
      	
      	// Désactive le "culling", afin de visualiser le devant et l'arrière du triangle
      	gpclD3DDevice:SetRenderState(D3DRS_CULLMODE, d3dcull_none)
      	
      	// Désactive l'éclairage Direct3D
      	gpclD3DDevice:SetRenderState(D3DRS_LIGHTING, Faux)
      	
      renvoyer vrai
     type : 458752
   -
     name : D3DInitVertexBuffer
     internal_properties : CAAAAAgAAACtcg3CkRaGdcO0XxsbyOL7KvJTPTQpHw4A4uqDfVCWTuY6CFQ1IwzTKwehkDH/+Kx4F4tLGO/JJvohEZeATb9FiY7/Vp57DOSGBb4NXrDHZsKQbrZKIvxDJKE/uUCyLT7VbwY6DfCt7NN2lXk0djMooAEu1/Gol8PXX767wGN/AeFFSjNwKRmS1crt7G+GEHLoGZsc00DWEi19k7p+etS57rfcJEjMex+tVt1sqRZf7Cyo+YS2QnpIigCVpRnrELeEs6TnD0r4ZAHKKluObJqHwWij+COpZNn9La/N5JjS
     procedure_id : 1867997254065760100
     type_code : 14
     code : |1-
      // Résumé : Initialise le "vertex buffer"
      Procédure D3DInitVertexBuffer()
      
      	pBuffer est un entier système
      
      	// Crée les trois vertices pour effectuer le rendu d'un triangle
      	tabVertices est un tableau de VERTEXPERSO = [ ...
      		[-1.0, -1.0, 0.0, D3DCOLOR_ARGB(255, 255, 0, 0)], 	// x, y, z, couleur
      		[ 1.0, -1.0, 0.0, D3DCOLOR_ARGB(255, 0, 0, 255)], 
      		[ 1.0,  1.0, 0.0, D3DCOLOR_ARGB(255, 255, 255, 255)]
      	]
      	
      	// Crée le "vertex buffer" en lui allouant la taille mémoire nécessaire pour stocker les trois vertices (fonction sizeOf)
      	si failed(gpclD3DDevice:CreateVertexBuffer(sizeof(tabVertices), 0, D3DFVF_VERTEXPERSO, D3DPOOL_DEFAULT, gpclVertexBuffer, null)) _ou_ gpclVertexBuffer = Null ALORS
      		renvoyer faux
      	FIN
      	
      	// On doit maintenant remplir le "vertex buffer" avec nos trois vertices
      	
      	// On commence donc par récupérer le pointeur mémoire du "vertex buffer"
      	si failed(gpclVertexBuffer:Lock(0, sizeof(tabVertices), pBuffer, 0)) ALORS
      		renvoyer faux
      	FIN
      	
      	// On copie le tableau des vertices dans le "vertex buffer"
      	transfert(pBuffer, &tabVertices, sizeof(tabVertices))
      	
      	// On libère le pointeur mémoire du "vertex buffer"
      	gpclVertexBuffer:Unlock()
      	
      renvoyer vrai
     type : 458752
   -
     name : D3DAffiche
     internal_properties : CAAAAAgAAACE/49gplAi4ekG1Q2WclJDcA9wBZLAkOxDceww1zBejQyWYGnVqeB/7UzlxsxSnMJluV1ZvMZry9WBPE5NvIePek2U07R5FAMr0BV6QiddXG7Sv0YNxok0ysio6QqW0G3QVqMua0fJvIPKl2Jz55WvyLAtKMCa/GZ71ri6X43b/VGwXDWE776eOTJf5aPHN9mzjJqOiwT3257G4upIfaJNHWS52vhAUv/YZdaUPVZYry6JE4y4NRJX1obeD72og8g3xsLtz26aTIG1B0mQTrztKRgdKIIjA1IAvB7CgywotfX51i6KTWua+E3F
     procedure_id : 1867997254065825636
     type_code : 14
     code : |1-
      // Résumé : Rendu et affichage du "device" Direct3D
      // Procédure automatique :
      // La procédure est exécutée manuellement, lors d'un appel dans le code
      // Elle sera répétée en boucle, en attendant  entre chaque appel
      // Chaque appel suivant exécute une seule fois la procédure, sans timer
      // 
      Procédure D3DAffiche()
      
      	stVertex est un vertexperso
      
      	// Si le "device" Direct3D est invalide, on sort
      	si gpclD3DDevice = null alors retour
      	
      	// Efface le "backbuffer" avec une couleur bleue
      	gpclD3DDevice:Clear(0, null, D3DCLEAR_TARGET, D3DCOLOR_XRGB(0, 0, 255), 1.0, 0.0)
      	
      	// Démarre la scène
      	si SUCCEEDED(gpclD3DDevice:BeginScene()) ALORS
      		
      		// Définit et applique les matrices
      		D3DInitMatrices()
      		
      		// On dessine le triangle stocké dans le "vertex buffer"
      		
      		// Pour cela, on indique au "device" la source des données
      		gpclD3DDevice:SetStreamSource(0, gpclVertexBuffer, 0, sizeof(stVertex))
      		
      		// On indique le format des vertices
      		gpclD3DDevice:SetFVF(D3DFVF_VERTEXPERSO)
      		
      		// Et on dessine les vertices
      		gpclD3DDevice:DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 1)
      		
      		// Fin de la scène
      		gpclD3DDevice:EndScene()
      	FIN
      	
      	// Affichage du "backbuffer"
      	gpclD3DDevice:Present(null, null, null, null)
     type : 458752
   -
     name : D3DInitMatrices
     internal_properties : CAAAAAgAAAAIYL1xCt+QoR4pXpiFCiF+c6a9S8tlQm20pAg0N2e+5x4uFjZddrwYBkT12nJfM4koYadanVkhnHvuKgT0pooMt4tonQRlaZ0kk9VBB38nj/g7NPRQy1TjowjDU8gxlfAayVKCpzoiTV3QG3Rlh6wNOB4krWvsq1AFyhkZVs6Sg35Q8lJTsL0o1vsNmx56qyV5DieWXVkr04YlG69UX5u2RPKaNu7r
     procedure_id : 1867997254065891172
     type_code : 14
     code : |1-
      // Résumé : Initialisation des matrices
      Procédure D3DInitMatrices()
      	
      	nHeure est un entier
      	rAngle est un reel sur 4
      		
      	stMatWorld 	est un D3DXMATRIX	// Matrice de représentation du "monde" Direct3D
      	stMatView	est un D3DXMATRIX	// Matrice de représentation de la "vue" Direct3D
      	stMatProj	est un D3DXMATRIX	// Matrice de projection Direct3D
      	stVecEye	est un D3DXVECTOR3	// Position de l'oeil
      	stVecCam	est un D3DXVECTOR3	// Direction de l'oeil
      	stVecUp		est un D3DXVECTOR3	// Elévation de la caméra
      	
      	// Définit une rotation de 2 * PI toutes les 1 secondes
      	nHeure = D3DXGetTime() / 100
      	rAngle = nHeure * (2.0 * d3dx_pi) / 100	
      	D3DXMatrixRotationY(stMatWorld, rAngle)
      	
      	// Applique la rotation
      	gpclD3DDevice:SetTransform(d3dts_world, stMatWorld)
      	
      	// Initialise les vecteurs de vue
      	stVecEye = [0.0, 3.0, -5.0]
      	stVecCam = [0.0, 0.0,  0.0]
      	stVecUp  = [0.0, 1.0,  0.0]
      	
      	// Définit la matrice de vue
      	D3DXMatrixLookAtLH(stMatView, stVecEye, stVecCam, stVecUp)
      	
      	// Applique la vue
      	gpclD3DDevice:SetTransform(D3DTS_VIEW, stMatView)
      	
      	// Définit la matrice de projection
      	D3DXMatrixPerspectiveFovLH(stMatProj, d3dx_pi / 4.0, 1.0, 1.0, 100.0)
      	
      	// Applique la matrice de projection
      	gpclD3DDevice:SetTransform(D3DTS_PROJECTION, stMatProj)
     type : 458752
  templates :
   -
     name : FEN_03a_Matrices
     identifier : 0x1543d3fb367625e4
     code_elements :
      internal_properties : CAAAAAgAAACIMP8rh0cZMm+J7g8RNUlsXiqZmOPRK/tf/B3QBD1vZObrdyk+TdDl36cYuEymKXecYWBOpMsaqp9eu12KXJn/pLRlhrumBxv40PYcrbfKDuiju791pEByR5nn6hq7
      type_code : 1
      p_codes :
       -
         code : |1-
          
       -
         code : |1-
          
         type : 34
       -
         type : 180
         enabled : false
       -
         type : 230
         enabled : false
       -
         code : |1-
          
         type : 2
       -
         code : |1-
          
         type : 11
       -
         code : |1-
          
         type : 12
       -
         code : |1-
          
         type : 17
       -
         code : |1-
          
         type : 13
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAAD41EFVWFF7SAwzd+8+tTlPQzQOqrePoffe3zujAQsXVPKhnbz1Vze9uX1xEHfGZ53L/ImwBVh7QM0ijTy26nuXl6nmgRuF687jh7MrAxkw2m0o/GTSE2RmszekPw==
  original_name : FEN_Fenêtre1
resources :
 string_res :
  identifier : 0x10d999010ff3b7ed
  internal_properties : CAAAAAgAAACa/HBK/CUtN70EwGNqHiA5Ong4hctn68fiPi5bW47/f5kdMy4EhFbbsLDr9WzJV0mJiQ==
custom_note :
 internal_properties : CAAAAAgAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : CAAAAAgAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
