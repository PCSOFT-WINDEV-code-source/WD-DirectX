#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : FEN_05b_TexturageEclairage
 major_version : 28
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : FEN_05b_TexturageEclairage
 identifier : 0x29eddb6cef928022
 internal_properties : CAAAAAgAAAC1wPqFNkhJ0vKNyIU4KVmYLorKOGpy2IGmKIdcwbxDAoVBGruAPekSoQ38CQbqVhTRGMY9uu/m7hB/y7cEpqjzacGsbAYtNC9Ix8usIbIGdOJO1xNIT3uN8Pwh4z5qUCvNofS7aJ5YI7yn7tvchQl+dJGT93tB3sDvvllXl1jmD4bn4pRlPym3EqHl0NU8VXPS/yolwCrkJfZ59ylSoJw1OwnqZDv45n4Q6P5rJMpeAtCDu8NuwHOnE2if8MJ+y2dm2xBX4Cs15apYcbeR5Lu5bkJwQhoh89z12xeUQHYyCUk5PjoTcxczOXl1peHVaaNq+wiraZFDG8rPz9F1D1JjFzYKrpNkx766iMxNDhUp3aW5qLXqqEI6gdswsCAoVSR2jwngvGvwzYvTkLARfQ7mBszQIJR65UOPMoeY/A9A3+CwqZRducfrlRmV4bjfkxHEc3oD1THYbrgPgr4xXlmXTEWVWVPdPBL62DOSrjUFDe0PzUjYyzDMv2Anmx8pxlL5upQX+X2Wgi1LRPI2t5Z7cEZmeY1pQSwTanJIgYAnJz9/sLxBzgJaXTfgQ78zqtpZPfsi4c7FCfu0SCGLOojj4Kx2JtttvT13IMTfLVABLkmay/Bxp8+89Q4LAa6Wwa3u94OzER7Mdn2tYwHonhd8KPRkBsn1Iear/ynlGGAeFoclIdPF28cOuHQI1EyEcRF8ZDWeQmueFvIS7i6t5siKFOYiZN7Y9mwjxJocJi3ogsdx+R1X9ZE2y/Wwrzyc7yuAvJs+l76+6BPFr+EPv2M6+suz9uoK+umhfg8EjJXHkXBy83Kv0SiGMcBYeZNqgioNHMwvBIwkQFOd0IYdxZEOVEF7smDx7ZBOa1jAg775y7+j6Ax08qyJOug6LLYiS+Klta5KmibCQpUhr+FLkf91KaFvmH/aFD+9728pnWhSusk/zPpGwLslWeJDtlNzkyHOFpnLNQAfvdlK2sRa4DUxCc8u9NxbMFj4XroyPH00X/0Su6n4xKhU9Zz3Z1GfD3pXJoB+SUPBgwuDackXf6xaw7hedgXFQoRvZaZ2fEhVP7yT38Yop7qYSE2iNWo+0Lyn6es2wt7SPHHd
 properties :
  width : 796
  height : 606
  widthClient : 794
  heightClient : 574
 controls :
  -
    name : INT_TEXTUREFIXE
    identifier : 0x29eddb6cef958022
    internal_properties : CAAAAAgAAACi6V7CXXqE/k6dQ4a74F+Vr7UcvfwFyRnnWDSBpSeKrauoLgzEWDdVFUmqS6yBd9Qa8hHdzxxsCMlQyA2/0V3ihVi/Fanb6Gt7awkV0w0j45oIVEvkcNYInlLwnG653O4rDea7nEwYTtHheq3sW0sEemTq2s3WDC2Pf3HfdQqD7TOdeY8xbbruIcqywW7byXK/6utGAcgIGtO/uAilNtTxv/00c5V0LP/teyf5Qo4xzMocZwtF2nBEzdL+m2ABqKxeCQdauCtp5YVMHpt/mP7sKzjVHYQktDc6vAdGkGPKKvXTIju3Hku4txXpGh4piU7jLGml5l+FOl0UBO1a8b1cw4gjIpFZa7PZ7fXC397QmxufeIBglswDAgz0sdB5DwZvNBmigM7Eu62hELjGQyAP7N1cj9PyLUSANssF4ymiiH7ck7izyk0hG+QD8q1vO19obmzfMXlCxOk6ngMdfoaakrzitelE/gR+BiZxy+Lq1Z7Vuhb/WiMGw4gh/WtCuOnQiTj5/VLA1hZu24MFEPIG7L64jI5v39QSjRy2Yc/pC0xmYwmixq97r4pGTuHS0PORCLrS5+kHXWouQLG6Ply8u5ByJUJFo3Y0x5wjAeu7Hg5M5NhflbqzrTiD9FYcwBRnSo6iB+gTORZzL8fFA/WPEty+lpU+
    properties :
     x : 803
     width : 90
     height : 23
    options :
     -
       internal_properties : CAAAAAgAAAAzCJWkVfwgRUqY6EVF8JKml3SpsmVkeBvY1jNJQdaZ3Ak1uTJQAd5ZtVAlIkzDHa3exSRCTEk3RHqLOhX1Skrqnb21319hLXRmv5KH81Cx5tkNeQw7InKc9cBFUJkdLEQyBlw+3f2ezY0Z7xasDuqhod6CTjJemcW2ZJ1zlhEe+7z5zqiM
    type : 5
    controls : []
    code_elements :
     type_code : 5
     p_codes : []
  -
    name : BTN_Echap
    identifier : 0x2c76673d6a3d198a
    internal_properties : CAAAAAgAAAD0FsPaau0+WtIZW1STZl+fE1itnFOUjhZkZf4OCB1jIMfXpAmRPjfXq4njx19lSDrbditFPFHgvaMaOjv9fUaShgNmatWFwvOuPjHwKNgGlke2wEaexB2heFBOugz3U3KHv1QueKO/73NpCX21ZqjYLYM6oPcaVnl9nSG/hdrFWbYmEOP1vWM298xP32mCOOqyBIyfOwZaMdXoOtCZRYgZqKY2kBjFDsYPkDpvzItNNJzuNB4m3ZAh5p6YCJcreFPyDPesN8vpd1rsQ0nHRPyfuXCnaNLR+xM5TIdEz7KckUQxWhFHpvaNPULFom31GpHht/FZW2zRQVgwqb79QCb/wUKEEsMLdSx4B+THEixPpqJ6SMMR68lNaLbS5muuEyNgpBlr+1GTj1/PgLLRELbe4tp+qBe6NLq2cI2Uz0AhHjZ0uhtzGQnjSM42yNBmuQOP6Nxv8G4tp+XH8zu18Km7zKlwViYD2IxahGJiqQSVi5VcDRgxLvwVUKRnymLPb5V6KcjhqpU3WuQqwytRR7a9pdqUceSPeq2ygH9JWnZMDAZ1gi5Ur80x9ziiZ06dqPCc2sPdPbBOC0SWtcChrNGbs27/6UWR4xwPoDExvQcbLxDGLx7G3aQXzdQRpqjgQdQOaKVkJ/3TqAhgFzWnlAcL+7BoEx0wuOu0DtYoNSwgITE7xGt3XgoE/KNzi+8=
    properties :
     x : 6
     y : -55
     width : 80
     height : 24
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        internal_properties : CAAAAAgAAADQZyvpRjJZltgKBVFD+SKMukTEU1n2G2jmPSjnx1ZKdSF2vB36egNKcReVrz/xwpIZdIpZoyUu0CjPxu+MpGLAedmE/39iAmJIcu72BpKoWkpseLXy2lnJGPSMFw==
        type : 18
      -
        type : 161
        enabled : false
  -
    name : IMG_DX
    identifier : 0x29eddb6cef948022
    internal_properties : CAAAAAgAAACrNnO9RSMEkUxA4R+7lm2dHi1sC5G6chvhygH/tgYugDTz9KivJ1TL8JgmeKZbUaF2HASAAZpbNxYwkMhzvdDzSF1xS//LrKhVH3dUcU9iuvs7XAiRLO49i8imjlVHBmn/9eWJyYNp6/3ZAgl1ZJYPUZT7qv+HTErhaiGyq91uIlsfSbVqWMs8f1q00V0cs77j8V0mK9/iFS+aDw1MXZQsHLy452yHaS7ufiFGgBmUEoB9GttpF0l0J6sxrGyrrEOV2MeKBe69kDtFT1NZQwvv9E2lt3HIakKZEpo2cXJXP/8nDy+OlScHgWlMG1FuRfbOmfDg/LBzR8UkDgn3+EDLH4gB36VWBSOLsY8+4VejfIeUhgmFSq+38AS9hwJEghugECKgfAkJQWpEvIX6wKAqpKOBe71KRYW+FpbgsUdKDTRGNvuKlmB08Gavl54R1K7IY2Em5W9JQIsEhpkz2tPt8NKYoayv6CyYSs6PfoXGKTrNiUcpAHAM17UyzUAduG3PEFjGSm+XA2orI+fxc69MJTWb+KXXTgNgKu/mkgi5USvYGyp9kUO2nLRyxTlsFaTJm8dmMaramPtNUfdsC6tl//+tEWyEekx+CiDAK/78P6SheozZXYkoIBhV8c5pyiXaRIg=
    properties :
     width : 794
     height : 574
    type : 8
    code_elements :
     internal_properties : CAAAAAgAAAAjW0JkwpJU6bb4H6gOVG5BbTnI6bKQ5jZqh7f+RvG3nM4Lbyno7TyJc8vGsvwgufYtqM9vZ26FX9b1xFxJoxL2v5dwS+B51GY3n8VNnqblK4fCWhAm64k9EtSiN68W
     type_code : 8
     p_codes : []
 menu :
  name : _Menu
  identifier : 0x29eddb6cef978022
  internal_properties : CAAAAAgAAAD7S+2GOLjEeheq9Y6YZGIRPpLnwB8KUS2je4S4X5oxSGrv51WBBaVxxbk/BTEdUwW0fnnvlhQNIBAuQTAO0S9+S8FMTvDhqkS1JydqFJBfHlbZSFzBkZAjjJ5aIH/cuMnF4Pme57TAyYvjnlkzTJmN5UX9hu+BEl3AsIsso5gsz3oX/KHp1ai/xWZCb54MlUFXdWmT2EOpULKqea/LH9EOlTkaiWsV2aM2/FfXQjTSY3NhAR6zEzKHYKVJwiZULchG0D4LNvRbPifZJPDMmlF6ptz+Rg0QN6SXG5jU7HifIzmkonwDFnOJQw==
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : CAAAAAgAAABHSPkb1tqgSCqRR5dekoL1A/XsC+f7MghpgAiNjk2p+zU290UKFNsf/RG2TXCdD8pkYIQPTC757XGg+l+qdKnSy80OOFd+coZmWvKACTZS1VsEXFXvfAVoTQ4G
 actionbar : {}
 code_elements :
  type_code : 1
  p_codes :
   -
     internal_properties : CAAAAAgAAABNuOg/a1gxeSZIQvUxfbExPD/kj1b9ARRGxWIlsAsxLWSEg3hTzkX1yP+53kkbXfnc4VYlrB700SUG0kxPwojvV9l9XIrtifL64hrYTS5/1ZwR8YmFEHDPxEDnF7CfCFbHOaepp6CCK2S/Ubl6gk50OCalEpSuJrgEdAfUPacmT31nnqMRcmOUqO19j1tMdr7Sh/OJH9u8I9/qpC9V
     code : |1-
      
      //
      // Cette fenêtre présente le concept d'application de texture (texturage).
      // En plus de l'éclairage, l'application de texture permet de rendre les objets 3D plus "réels".
      //
      
      // Objets
      gpclD3D				est un IDirect3D9 dynamique					// Objet de base permettant de créer un "device"
      gpclD3DDevice 		est un IDirect3DDevice9 dynamique			// Objet de manipulation du "device"
      gpclVertexBuffer	est un IDirect3DVertexBuffer9 dynamique		// Objet permettant de stocker des vertices
      gpclTexture			est un IDirect3DTexture9 dynamique			// Objet permettant de stocker une texture (ou "image")
      
      // Structure personnalisée pour stocker un type de vertex 
      VERTEXPERSO est une structure
      	_position	est un D3DXVECTOR3			// position 3D du vertex
      	_normal  	est un D3DXVECTOR3			// normal du vertex
      	tu, tv		sont des reels sur 4		// coordonnées de la texture sur le vertex
      FIN
      
      // Décrit le type de notre vertex personnalisé
      constant
      	D3DFVF_VERTEXPERSO = D3DFVF_XYZ + D3DFVF_normal + D3DFVF_TEX1
      FIN
   -
     internal_properties : CAAAAAgAAAA7Evr0L+Ei/amyQ912fk4LCkziAFUSRImNjpwemp3DARRh0SEA7y3zUl0y//FYDaynW61LCBlGuxj1VYITS1OsrxNzN/aNS30LNGwtJ8Fw5wWq3y3n7fN2/zDpNx0JgAozX8AK9F3dHIyGw9h1iNqmfbwwIPq3RDzdorZvS320tw==
     code : |1-
      
      // Initialise Direct3D
      si D3DInit() ALORS
      	
      	// Initialise le "vertex buffer"
      	si D3DInitVertexBuffer() ALORS
      		
      		// Démarre le rendu
      		d3daffiche()
      	sinon
      		SI EnModeTestAutomatique ALORS
      			TestEcritRésultat(terInfo, "DirectX n'est pas disponible sur cette machine" + RC + ErreurInfo)
      			Ferme
      			RETOUR
      		FIN
      		
      		erreur("Impossible d'initialiser le vertex buffer")
      	FIN	
      sinon
      	SI EnModeTestAutomatique ALORS
      		TestEcritRésultat(terInfo, "DirectX n'est pas disponible sur cette machine")
      		Ferme
      		RETOUR
      	FIN
      	
      	Erreur("Impossible d'initialiser Direct3D")
      FIN
     type : 34
   -
     type : 180
     enabled : false
   -
     type : 230
     enabled : false
   -
     type : 11
   -
     type : 12
   -
     type : 17
   -
     type : 13
  procedures :
   -
     name : D3DInit
     internal_properties : CAAAAAgAAACeDpXEBsDQRWLWjSxTPUU3ALfCoJjO9r6zNrA9lk9obUGTifMCx9VA5CmWbH4zzoSjcd6CczsAqaqj0rjORjC2lJ2e2hIoROadx9+MOvMNCbwyt64jA5C2Bt0NLByjrKYWUHzDsuax8Q1/ZpAESp5BBomaDnJqSnpv/9KpC036nR0R8mz7inXQiLkoo4K4H5n9n9E62755LnNmwa0PFl4gcje2yuh1L1UXYt++13+U+gakH8I2Hd/tNlA/L99RHYaZ
     procedure_id : 1868390681911722018
     type_code : 14
     code : |1-
      // Résumé : Initialise Direct3D
      Procédure D3DInit()
      
      	stD3DPP est un D3DPRESENT_PARAMETERS
      
      	// Création de l'objet Direct3D
      	gpclD3D = Direct3DCreate9(D3D_SDK_VERSION)
      	
      	// Vérifie si l'objet Direct3D a pu être créé
      	si gpclD3D = Null ALORS
      		renvoyer faux	
      	FIN
      	
      	// Paramétrage de la structure utilisée pour créer un "device" Direct3D
      	stD3DPP:Windowed = vrai														// Mode fenêtré
      	stD3DPP:SwapEffect = D3DSWAPEFFECT_DISCARD									
      	stD3DPP:BackBufferFormat = D3DFMT_UNKNOWN
      	stD3DPP:EnableAutoDepthStencil = vrai										// Z-Buffer
      	stD3DPP:AutoDepthStencilFormat = d3dfmt_d16
      	
      	// Création du "device" Direct3D
      	// On utilise ici l'écran par défaut (D3DADAPTER_DEFAULT) et un "device" matériel (D3DDEVTYPE_HAL)
      	si failed(gpclD3D:CreateDevice(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, handle(img_dx), D3DCREATE_HARDWARE_VERTEXPROCESSING, stD3DPP, gpclD3DDevice)) _ou_ gpclD3DDevice = null ALORS
      		renvoyer faux
      	FIN
      	
      	// Désactive le "culling", afin de visualiser le devant et l'arrière du triangle
      	gpclD3DDevice:SetRenderState(D3DRS_CULLMODE, d3dcull_none)
      	
      	// Désactive l'éclairage
      	gpclD3DDevice:SetRenderState(D3DRS_LIGHTING, vrai)
      	
      	// Active le Z-Buffer
      	gpclD3DDevice:SetRenderState(D3DRS_ZENABLE, vrai)
      	
      renvoyer vrai
     type : 458752
   -
     name : D3DInitVertexBuffer
     internal_properties : CAAAAAgAAADB7EAx0YbwAVwLOjPzXFO/kzulGUgetad8fXKLL+r6g80iNPvZQY1wDOhp3fXfE1rXksyk0lfaTAbMZ+TFDKiQ4W3eHQ55oVAUaeJeP59JeMxvR1XdnWTVFpJNGnlXaQTXB8UeyijmPwVz27sZDWx+ye2TfOM+5Mgy6es6/SomTMqWJhdtMxiNb1HDfybDu4fMmicC0N1ovjb5jiDwyA7hCowZ/jVK3lIoR9EOdFR9vIgDmhd6lKm7edheMhPSAatVYQMneJEbT8oWhk/tKPG37Jj7xxn+8mT8NGksC9zmfM7N2fOA82lUS/PYPT5pVN/4fUZtPyrCRw==
     procedure_id : 1868390681911787554
     type_code : 14
     code : |1-
      // Résumé : Initialise le "vertex buffer"
      Procédure D3DInitVertexBuffer()
      
      	pBuffer est un entier système
      	rTheta  est un reel sur 4
      
      	// Liste des vertices pour la création d'un cylindre
      	tabVertices est un tableau de 100 VERTEXPERSO
      	
      	// Chargement de la texture
      	si failed(D3DXCreateTextureFromFileA(gpclD3DDevice, frepexe() + ["\"] + "texture.jpg", gpclTexture)) _ou_ gpclTexture = null alors
      		renvoyer faux
      	FIN
      	
      	// Crée le "vertex buffer" en lui allouant la taille mémoire nécessaire pour stocker les trois vertices (fonction sizeOf)
      	si failed(gpclD3DDevice:CreateVertexBuffer(sizeof(tabVertices), 0, D3DFVF_VERTEXPERSO, D3DPOOL_DEFAULT, gpclVertexBuffer, null)) _ou_ gpclVertexBuffer = Null ALORS
      		renvoyer faux
      	FIN
      	
      	// Génère les vertices d'un cylindre
      	pour i = 0 _a_ 49
      		
      		rTheta = D3DXToDegree((2 * d3dx_pi * i) / 49)
      		
      		tabVertices[2 * i + 1]:_position = [sinus(rTheta), -1.0, cosinus(rTheta)]
      		tabVertices[2 * i + 1]:_normal   = [Sinus(rTheta),  0.0, Cosinus(rTheta)]
      		tabVertices[2 * i + 1]:tu 		 = i / 49
      		tabVertices[2 * i + 1]:tv   	 = 1.0
      	
      		tabVertices[2 * i + 2]:_position = [Sinus(rTheta),  1.0, Cosinus(rTheta)]
      		tabVertices[2 * i + 2]:_normal   = [Sinus(rTheta),  0.0, Cosinus(rTheta)]
      		tabVertices[2 * i + 2]:tu 		 = i / 49
      		tabVertices[2 * i + 2]:tv   	 = 0.0		
      	FIN
      	
      	// On doit maintenant remplir le "vertex buffer" avec nos vertices
      	
      	// On commence donc par récupérer le pointeur mémoire du "vertex buffer"
      	si failed(gpclVertexBuffer:Lock(0, sizeof(tabVertices), pBuffer, 0)) ALORS
      		renvoyer faux
      	FIN
      	
      	// On copie le tableau des vertices dans le "vertex buffer"
      	transfert(pBuffer, &tabVertices, sizeof(tabVertices))
      	
      	// On libère le pointeur mémoire du "vertex buffer"
      	gpclVertexBuffer:Unlock()
      	
      renvoyer vrai
     type : 458752
   -
     name : D3DAffiche
     internal_properties : CAAAAAgAAADwx2f3OZV/BF5XXPCoXf72d2uYCg7yfGCCayteiILZGs4ZVOkUAq6QpyfwRhTUZVNJij/niw5qT1unsuQDsEbOTXheBxHglAtT6cgzTV+l86rrqwqtCae9mhBFTMylMMW1UruG8yvV+OX2YHN0YiFB8Dj2j61JIeCaqn0hoikhJB8M+77x3OW2eOKselS3rfB/0CNFnjXKXSPaWKxSziDksO9/yAmXBIje/VtTnUo6hTiLOsdXPVirF/ks4u+wfWvIliB+L5rJ3q6FpZgt2IifyLOHMF4tOZfU3za/RwflWokOIRke1T2CSA==
     procedure_id : 1868390681911853090
     type_code : 14
     code : |1-
      // Résumé : Rendu et affichage du "device" Direct3D
      // Procédure automatique :
      // La procédure est exécutée manuellement, lors d'un appel dans le code
      // Elle sera répétée en boucle, en attendant  entre chaque appel
      // Chaque appel suivant exécute une seule fois la procédure, sans timer
      // 
      Procédure D3DAffiche()
      
      	stVertex 		est un vertexperso
      	stMatTexTrans	est un D3DXMATRIX
      	stMatProj, stMatTrans, stMatScale sont des D3DXMATRIX
      
      	// Si le "device" Direct3D est invalide, on sort
      	si gpclD3DDevice = null alors retour
      	
      	// Efface le "backbuffer" avec une couleur bleue
      	gpclD3DDevice:Clear(0, null, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, D3DCOLOR_XRGB(0, 0, 255), 1.0, 0.0)
      	
      	// Démarre la scène
      	si SUCCEEDED(gpclD3DDevice:BeginScene()) ALORS
      
      		// Définit et applique l'éclairage
      		D3DInitEclairage()
      					
      		// Définit et applique les matrices
      		D3DInitMatrices()
      		
      		// Paramétrage de la texture
      		gpclD3DDevice:SetTexture(0, gpclTexture)
      		gpclD3DDevice:SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE)
      		gpclD3DDevice:SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE)
      		gpclD3DDevice:SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE)
      		gpclD3DDevice:SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_DISABLE)
      		
      		si INT_TEXTUREFIXE alors		
      			gpclD3DDevice:GetTransform(D3DTS_PROJECTION, stMatProj)
      			D3DXMatrixTranslation(stMatTrans, 0.5, 0.5, 0.0)
      			D3DXMatrixScaling(stMatScale, 0.5, -0.5, 1.0)
      			stMatTexTrans = D3DXMatrixMultiplyEx(stMatProj, stMatScale, stMatTrans)
      			
      			gpclD3DDevice:SetTransform(D3DTS_TEXTURE0, stMatTexTrans)
      			gpclD3DDevice:SetTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT4 | D3DTTFF_PROJECTED)
      			gpclD3DDevice:SetTextureStageState(0, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION)
      		fin
      		
      		// On dessine le triangle stocké dans le "vertex buffer"
      		
      		// Pour cela, on indique au "device" la source des données
      		gpclD3DDevice:SetStreamSource(0, gpclVertexBuffer, 0, sizeof(stVertex))
      		
      		// On indique le format des vertices
      		gpclD3DDevice:SetFVF(D3DFVF_VERTEXPERSO)
      		
      		// Et on dessine les vertices
      		gpclD3DDevice:DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2 * 50 - 2)
      		
      		// Fin de la scène
      		gpclD3DDevice:EndScene()
      	FIN
      	
      	// Affichage du "backbuffer"
      	gpclD3DDevice:Present(null, null, null, null)
     type : 458752
   -
     name : D3DInitMatrices
     internal_properties : CAAAAAgAAAAIYL1xCt+QoR4pXpiFCiF+c6a9S8tlQm20pAg0N2e+5x4uFjZddrwYBkT12nJfM4koYadanVkhnHvuKgT0pooMt4tonQRlaZ0kk9VBB38nj/g7NPRQy1TjowjDU8gxlfAayVKCpzoiTV3QG3Rlh6wNOB4krWvsq1AFyhkZVs6Sg35Q8lJTsL0o1vsNmx56qyV5DieWXVkr04YlG69UX5u2RPKaNu7r
     procedure_id : 1868390681911918626
     type_code : 14
     code : |1-
      // Résumé : Initialisation des matrices
      Procédure D3DInitMatrices()
      	
      	nHeure est un entier
      	rAngle est un reel sur 4
      		
      	stMatWorld 	est un D3DXMATRIX	// Matrice de représentation du "monde" Direct3D
      	stMatView	est un D3DXMATRIX	// Matrice de représentation de la "vue" Direct3D
      	stMatProj	est un D3DXMATRIX	// Matrice de projection Direct3D
      	stVecEye	est un D3DXVECTOR3	// Position de l'oeil
      	stVecCam	est un D3DXVECTOR3	// Direction de l'oeil
      	stVecUp		est un D3DXVECTOR3	// Elévation de la caméra
      	
      	// Définit une rotation en fonction du temps
      	nHeure = D3DXGetTime()
      	rAngle = nHeure / 500
      	D3DXMatrixRotationYawPitchRoll(stMatWorld, rAngle, rAngle, rAngle)
      		
      	// Applique la rotation
      	gpclD3DDevice:SetTransform(d3dts_world, stMatWorld)
      	
      	// Initialise les vecteurs de vue
      	stVecEye = [0.0, 3.0, -5.0]
      	stVecCam = [0.0, 0.0,  0.0]
      	stVecUp  = [0.0, 1.0,  0.0]
      	
      	// Définit la matrice de vue
      	D3DXMatrixLookAtLH(stMatView, stVecEye, stVecCam, stVecUp)
      	
      	// Applique la vue
      	gpclD3DDevice:SetTransform(D3DTS_VIEW, stMatView)
      	
      	// Définit la matrice de projection
      	D3DXMatrixPerspectiveFovLH(stMatProj, d3dx_pi / 4.0, 1.0, 1.0, 100.0)
      	
      	// Applique la matrice de projection
      	gpclD3DDevice:SetTransform(D3DTS_PROJECTION, stMatProj)
     type : 458752
   -
     name : D3DInitEclairage
     internal_properties : CAAAAAgAAABNj9d8f1d3BmnR/8GECJl4wekmiWlCSulKxG7dbRoKko2cwe4v7i2adZ2e+LzYobzwPGz8v6Wbb+ScUd2h/23a7WRmCB7Atewo6/C0m5Sh9eu6e9BupSNh2AbEPQHY+X3Gt/qdSF10/yIOLED4+Lz8YGwWmJCXy7BgDFL/VZ/kON63bYs2UO015qWz/CfvGjI3wpnFSoPMYtCuz8TWjaJqMRCmw87iweKy+bOSfg7Qr32Svg==
     procedure_id : 1868390681911984162
     type_code : 14
     code : |1-
      // Résumé : Initialise l'éclairage
      Procédure D3DInitEclairage()
      
      	stMaterial	est un D3DMATERIAL9
      	stLumière	est un D3DLIGHT9
      	stVecDir	est un D3DXVECTOR3
      	rAngle		est un reel sur 4
      	
      	// Création d'un "material"
      	stMaterial:Diffuse:red 		= 0.8
      	stMaterial:Diffuse:green 	= 0.8
      	stMaterial:Diffuse:blue 	= 0.8
      	stMaterial:Diffuse:alpha 	= 0.8
      	stMaterial:Ambient:red 		= 0.2
      	stMaterial:Ambient:green 	= 0.2
      	stMaterial:Ambient:blue 	= 0.2
      	stMaterial:Ambient:alpha 	= 0.2
      	
      	// Applique le "material"
      	gpclD3DDevice:SetMaterial(stMaterial)
      	
      	// Définit une lumière blanche directionnelle avec une direction oscillatoire
      	stLumière:Type = D3DLIGHT_DIRECTIONAL
      	stLumière:Diffuse:red 	= 1.0
      	stLumière:Diffuse:green = 1.0
      	stLumière:Diffuse:blue 	= 1.0
      	stLumière:Diffuse:alpha	= 1.0
      	stLumière:Ambient:red 	= 1.0
      	stLumière:Ambient:green = 1.0
      	stLumière:Ambient:blue 	= 1.0
      	stLumière:Ambient:alpha	= 1.0
      	
      	// Direction de la lumière en fonction du temps
      	rAngle = D3DXToDegree(D3DXGetTime() / 500.0)
      	stVecDir = [Sinus(rAngle), Sinus(rAngle), cosinus(rAngle)]
      	d3dxvec3normalize(stLumière:Direction, stVecDir)
      	
      	// Etendue de l'éclairage
      	stLumière:Range = 1000.0
      	
      	// Applique l'éclairage
      	gpclD3DDevice:SetLight(0, stLumière)
      	gpclD3DDevice:LightEnable(0, vrai)
      	gpclD3DDevice:SetRenderState(D3DRS_LIGHTING, vrai)
      	
      	// Définit la couleur ambiante
      	gpclD3DDevice:SetRenderState(D3DRS_AMBIENT, D3DCOLOR_ARGB(0, 0x20, 0x20, 0x20))
     type : 458752
  templates :
   -
     name : FEN_05b_TexturageEclairage
     identifier : 0x1543d3fb369a2680
     code_elements :
      internal_properties : CAAAAAgAAACIMP8rh0cZMm+J7g8RNUlsXiqZmOPRK/tf/B3QBD1vZObrdyk+TdDl36cYuEymKXecYWBOpMsaqp9eu12KXJn/pLRlhrumBxv40PYcrbfKDuiju791pEByR5nn6hq7
      type_code : 1
      p_codes :
       -
         code : |1-
          
       -
         code : |1-
          
         type : 34
       -
         type : 180
         enabled : false
       -
         type : 230
         enabled : false
       -
         code : |1-
          
         type : 2
       -
         code : |1-
          
         type : 11
       -
         code : |1-
          
         type : 12
       -
         code : |1-
          
         type : 17
       -
         code : |1-
          
         type : 13
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAAD41EFVWFF7SAwzd+8+tTlPQzQOqrePoffe3zujAQsXVPKhnbz1Vze9uX1xEHfGZ53L/ImwBVh7QM0ijTy26nuXl6nmgRuF687jh7MrAxkw2m0o/GTSE2RmszekPw==
  original_name : FEN_Fenêtre1
resources :
 string_res :
  identifier : 0x10d999021012b8b9
  internal_properties : CAAAAAgAAACa/HBK/CUtN70EwGNqHiA5Ong4hctn68fiPi5bW47/f5kdMy4EhFbbsLDr9WzJV0mJiQ==
custom_note :
 internal_properties : CAAAAAgAAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : CAAAAAgAAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
